<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carton.mapper.CartonOrderMapper" >
  <resultMap id="BaseResultMap" type="com.carton.model.CartonOrder" >

    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="carton_stock_id" property="cartonStockId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="sales_price" property="salesPrice" jdbcType="DOUBLE" />
    <result column="publish_date" property="publishDate" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >

    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >

    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    
    id, account_id, name, carton_stock_id, amount, sales_price, publish_date, comment, create_date, create_user,
    update_date, update_user, valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.carton.model.CartonOrderExample" >

    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from carton_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >

    select
    <include refid="Base_Column_List" />
    from carton_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    
    delete from carton_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.carton.model.CartonOrderExample" >

    delete from carton_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.carton.model.CartonOrder" >
    
    insert into carton_order (id, account_id, name, carton_stock_id, amount,
      sales_price, publish_date, comment, 
      create_date, create_user, update_date, 
      update_user, valid)
    values (#{id,jdbcType=INTEGER},#{accountId,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}, #{cartonStockId,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER},
      #{salesPrice,jdbcType=DOUBLE}, #{publishDate,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.carton.model.CartonOrder" >

    insert into carton_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="cartonStockId != null" >
        carton_stock_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="salesPrice != null" >
        sales_price,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="cartonStockId != null" >
        #{cartonStockId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="salesPrice != null" >
        #{salesPrice,jdbcType=DOUBLE},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.carton.model.CartonOrderExample" resultType="java.lang.Integer" >

    select count(*) from carton_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >

    update carton_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.cartonStockId != null" >
        carton_stock_id = #{record.cartonStockId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.salesPrice != null" >
        sales_price = #{record.salesPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >

    update carton_order
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      carton_stock_id = #{record.cartonStockId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      sales_price = #{record.salesPrice,jdbcType=DOUBLE},
      publish_date = #{record.publishDate,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.carton.model.CartonOrder" >

    update carton_order
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="cartonStockId != null" >
        carton_stock_id = #{cartonStockId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="salesPrice != null" >
        sales_price = #{salesPrice,jdbcType=DOUBLE},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.carton.model.CartonOrder" >
    
    update carton_order
    set carton_stock_id = #{cartonStockId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      sales_price = #{salesPrice,jdbcType=DOUBLE},
      publish_date = #{publishDate,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>