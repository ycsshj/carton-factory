<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carton.mapper.CartonCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.carton.model.CartonCategory" >

    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="carton_big_type" property="cartonBigType" jdbcType="VARCHAR" />
    <result column="cartonBigValue" property="cartonBigValue" jdbcType="VARCHAR" />
    <result column="carton_small_type" property="cartonSmallType" jdbcType="VARCHAR" />
    <result column="cartonSmallValue" property="cartonSmallValue" jdbcType="VARCHAR" />
    <result column="carton_length" property="cartonLength" jdbcType="DOUBLE" />
    <result column="carton_width" property="cartonWidth" jdbcType="DOUBLE" />
    <result column="carton_height" property="cartonHeight" jdbcType="DOUBLE" />
    <result column="carton_standard" property="cartonStandard" jdbcType="VARCHAR" />
    <result column="critical_standard" property="criticalStandard" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >

    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >

    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    
    id, carton_big_type, carton_small_type, carton_length, carton_width, carton_height, 
    carton_standard, critical_standard, create_date, create_user, update_date, update_user, 
    valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.carton.model.CartonCategoryExample" >

    select
    <if test="distinct" >
      distinct
    </if>
    carton.id, carton.carton_big_type, carton.carton_small_type, carton.carton_length, carton.carton_width, carton.carton_height,
    carton.carton_standard, carton.critical_standard, carton.create_date, carton.create_user, carton.update_date, carton.update_user,
    carton.valid, bigType.lov_value as cartonBigTypeValue,smallType.lov_value as cartonSmallTypeValue
    from carton_category carton
    left join lov bigType on carton.carton_big_type = bigType.lov_code and bigType.category = "CARTON_CATEGORY"
    left join lov smallType on carton.carton_small_type = smallType.lov_code and smallType.category = "CARTON_CATEGORY"
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >

    select
    <include refid="Base_Column_List" />
    from carton_category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    
    delete from carton_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.carton.model.CartonCategoryExample" >

    delete from carton_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.carton.model.CartonCategory" >
    
    insert into carton_category (id, carton_big_type, carton_small_type, 
      carton_length, carton_width, carton_height, 
      carton_standard, critical_standard, create_date, 
      create_user, update_date, update_user, 
      valid)
    values (#{id,jdbcType=INTEGER}, #{cartonBigType,jdbcType=VARCHAR}, #{cartonSmallType,jdbcType=VARCHAR}, 
      #{cartonLength,jdbcType=DOUBLE}, #{cartonWidth,jdbcType=DOUBLE}, #{cartonHeight,jdbcType=DOUBLE}, 
      #{cartonStandard,jdbcType=VARCHAR}, #{criticalStandard,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.carton.model.CartonCategory" >

    insert into carton_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cartonBigType != null" >
        carton_big_type,
      </if>
      <if test="cartonSmallType != null" >
        carton_small_type,
      </if>
      <if test="cartonLength != null" >
        carton_length,
      </if>
      <if test="cartonWidth != null" >
        carton_width,
      </if>
      <if test="cartonHeight != null" >
        carton_height,
      </if>
      <if test="cartonStandard != null" >
        carton_standard,
      </if>
      <if test="criticalStandard != null" >
        critical_standard,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cartonBigType != null" >
        #{cartonBigType,jdbcType=VARCHAR},
      </if>
      <if test="cartonSmallType != null" >
        #{cartonSmallType,jdbcType=VARCHAR},
      </if>
      <if test="cartonLength != null" >
        #{cartonLength,jdbcType=DOUBLE},
      </if>
      <if test="cartonWidth != null" >
        #{cartonWidth,jdbcType=DOUBLE},
      </if>
      <if test="cartonHeight != null" >
        #{cartonHeight,jdbcType=DOUBLE},
      </if>
      <if test="cartonStandard != null" >
        #{cartonStandard,jdbcType=VARCHAR},
      </if>
      <if test="criticalStandard != null" >
        #{criticalStandard,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.carton.model.CartonCategoryExample" resultType="java.lang.Integer" >

    select count(*) from carton_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >

    update carton_category
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cartonBigType != null" >
        carton_big_type = #{record.cartonBigType,jdbcType=VARCHAR},
      </if>
      <if test="record.cartonSmallType != null" >
        carton_small_type = #{record.cartonSmallType,jdbcType=VARCHAR},
      </if>
      <if test="record.cartonLength != null" >
        carton_length = #{record.cartonLength,jdbcType=DOUBLE},
      </if>
      <if test="record.cartonWidth != null" >
        carton_width = #{record.cartonWidth,jdbcType=DOUBLE},
      </if>
      <if test="record.cartonHeight != null" >
        carton_height = #{record.cartonHeight,jdbcType=DOUBLE},
      </if>
      <if test="record.cartonStandard != null" >
        carton_standard = #{record.cartonStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.criticalStandard != null" >
        critical_standard = #{record.criticalStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >

    update carton_category
    set id = #{record.id,jdbcType=INTEGER},
      carton_big_type = #{record.cartonBigType,jdbcType=VARCHAR},
      carton_small_type = #{record.cartonSmallType,jdbcType=VARCHAR},
      carton_length = #{record.cartonLength,jdbcType=DOUBLE},
      carton_width = #{record.cartonWidth,jdbcType=DOUBLE},
      carton_height = #{record.cartonHeight,jdbcType=DOUBLE},
      carton_standard = #{record.cartonStandard,jdbcType=VARCHAR},
      critical_standard = #{record.criticalStandard,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.carton.model.CartonCategory" >

    update carton_category
    <set >
      <if test="cartonBigType != null" >
        carton_big_type = #{cartonBigType,jdbcType=VARCHAR},
      </if>
      <if test="cartonSmallType != null" >
        carton_small_type = #{cartonSmallType,jdbcType=VARCHAR},
      </if>
      <if test="cartonLength != null" >
        carton_length = #{cartonLength,jdbcType=DOUBLE},
      </if>
      <if test="cartonWidth != null" >
        carton_width = #{cartonWidth,jdbcType=DOUBLE},
      </if>
      <if test="cartonHeight != null" >
        carton_height = #{cartonHeight,jdbcType=DOUBLE},
      </if>
      <if test="cartonStandard != null" >
        carton_standard = #{cartonStandard,jdbcType=VARCHAR},
      </if>
      <if test="criticalStandard != null" >
        critical_standard = #{criticalStandard,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.carton.model.CartonCategory" >
    
    update carton_category
    set carton_big_type = #{cartonBigType,jdbcType=VARCHAR},
      carton_small_type = #{cartonSmallType,jdbcType=VARCHAR},
      carton_length = #{cartonLength,jdbcType=DOUBLE},
      carton_width = #{cartonWidth,jdbcType=DOUBLE},
      carton_height = #{cartonHeight,jdbcType=DOUBLE},
      carton_standard = #{cartonStandard,jdbcType=VARCHAR},
      critical_standard = #{criticalStandard,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>